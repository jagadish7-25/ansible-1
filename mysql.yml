- name: mysql configuration
  hosts: mysql
  become: yes
  vars:
    mysql_root_password: ExpenseApp@1
    login_host: mysql.chocojohns.bar
  tasks:
  - name: Enable Python 3.9 module
    ansible.builtin.shell: dnf module enable -y python39
    args:
      warn: false
  - name: Install Python 3.9
    ansible.builtin.yum:
      name: python39
      state: present
  - name: Install pip for Python 3.9
    ansible.builtin.shell: |
      python3.9 -m ensurepip --upgrade || curl -sS https://bootstrap.pypa.io/get-pip.py | python3.9
    args:
      creates: /usr/bin/pip3.9
  - name: Verify pip3.9 installation
    ansible.builtin.command: python3.9 -m pip --version
    register: pip_version

  - name: Ensure pip3.9 is installed
    ansible.builtin.debug:
      msg: "Installed pip version: {{ pip_version.stdout }}"

  - name: ansible to install pymysql
    ansible.builtin.pip:
      name:
      - PyMySQL
      executable: pip3.9
  - name: install MySQL Server
    ansible.builtin.package:
      name: mysql-server
      state: present

  - name: start mysql server
    ansible.builtin.service:
      name: mysqld
      state: started
      enabled: yes

  - name: connect mysql server
    community.mysql.mysql_info:
      login_user: root
      login_password: "{{ mysql_root_password }}"
      login_host: "{{ login_host }}"
    ignore_errors: true
    register: mysql_info

  - name: print mysql info
    ansible.builtin.debug:
      msg: "{{ mysql_info }}"

  - name: setup MySQL root password
    ansible.builtin.command: "mysql_secure_installation --set-root-pass {{ mysql_root_password }}"
    when: mysql_info.failed is true